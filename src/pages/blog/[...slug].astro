---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { render } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await render(post);

const { title, description, pubDate, updatedDate, heroImage } = post.data;
---

<Layout title={title} description={description}>
  <article class="container my-10">
    <div class="hero-image rounded-lg overflow-hidden">
      {heroImage && <img src={heroImage} alt={title} class="w-full" />}
    </div>
    <div class="prose max-w-none">
      <div class="title">
        <div class="date my-2">
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <h1>{title}</h1>
      </div>
      <Content />
    </div>
  </article>
</Layout>


